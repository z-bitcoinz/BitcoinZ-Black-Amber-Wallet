// Mocks generated by Mockito 5.4.6 from annotations
// in bitcoinz_black_amber/test/address_handling_fixes_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i17;

import 'package:bitcoinz_black_amber/models/address_label.dart' as _i15;
import 'package:bitcoinz_black_amber/models/address_model.dart' as _i8;
import 'package:bitcoinz_black_amber/models/analytics_data.dart' as _i4;
import 'package:bitcoinz_black_amber/models/balance_model.dart' as _i2;
import 'package:bitcoinz_black_amber/models/currency_model.dart' as _i5;
import 'package:bitcoinz_black_amber/models/message_label.dart' as _i14;
import 'package:bitcoinz_black_amber/models/transaction_category.dart' as _i3;
import 'package:bitcoinz_black_amber/models/transaction_model.dart' as _i7;
import 'package:bitcoinz_black_amber/providers/auth_provider.dart' as _i13;
import 'package:bitcoinz_black_amber/providers/currency_provider.dart' as _i18;
import 'package:bitcoinz_black_amber/providers/network_provider.dart' as _i10;
import 'package:bitcoinz_black_amber/providers/notification_provider.dart'
    as _i11;
import 'package:bitcoinz_black_amber/providers/wallet_provider.dart' as _i6;
import 'package:flutter/material.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeBalanceModel_0 extends _i1.SmartFake implements _i2.BalanceModel {
  _FakeBalanceModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionCategory_1 extends _i1.SmartFake
    implements _i3.TransactionCategory {
  _FakeTransactionCategory_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFinancialAnalytics_2 extends _i1.SmartFake
    implements _i4.FinancialAnalytics {
  _FakeFinancialAnalytics_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCurrency_3 extends _i1.SmartFake implements _i5.Currency {
  _FakeCurrency_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WalletProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletProvider extends _i1.Mock implements _i6.WalletProvider {
  MockWalletProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BalanceModel get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalanceModel_0(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i2.BalanceModel);

  @override
  List<_i7.TransactionModel> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isSyncing => (super.noSuchMethod(
        Invocation.getter(#isSyncing),
        returnValue: false,
      ) as bool);

  @override
  Map<String, List<String>> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  List<_i8.AddressModel> get addressModels => (super.noSuchMethod(
        Invocation.getter(#addressModels),
        returnValue: <_i8.AddressModel>[],
      ) as List<_i8.AddressModel>);

  @override
  bool get hasWallet => (super.noSuchMethod(
        Invocation.getter(#hasWallet),
        returnValue: false,
      ) as bool);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  String get connectionStatus => (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#connectionStatus),
        ),
      ) as String);

  @override
  bool get isSendingTransaction => (super.noSuchMethod(
        Invocation.getter(#isSendingTransaction),
        returnValue: false,
      ) as bool);

  @override
  double get sendingProgress => (super.noSuchMethod(
        Invocation.getter(#sendingProgress),
        returnValue: 0.0,
      ) as double);

  @override
  String get sendingStatus => (super.noSuchMethod(
        Invocation.getter(#sendingStatus),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#sendingStatus),
        ),
      ) as String);

  @override
  String get sendingETA => (super.noSuchMethod(
        Invocation.getter(#sendingETA),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#sendingETA),
        ),
      ) as String);

  @override
  bool get autoSyncEnabled => (super.noSuchMethod(
        Invocation.getter(#autoSyncEnabled),
        returnValue: false,
      ) as bool);

  @override
  String get syncMessage => (super.noSuchMethod(
        Invocation.getter(#syncMessage),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#syncMessage),
        ),
      ) as String);

  @override
  double get syncProgress => (super.noSuchMethod(
        Invocation.getter(#syncProgress),
        returnValue: 0.0,
      ) as double);

  @override
  int get syncedBlocks => (super.noSuchMethod(
        Invocation.getter(#syncedBlocks),
        returnValue: 0,
      ) as int);

  @override
  int get totalBlocks => (super.noSuchMethod(
        Invocation.getter(#totalBlocks),
        returnValue: 0,
      ) as int);

  @override
  int get currentBatch => (super.noSuchMethod(
        Invocation.getter(#currentBatch),
        returnValue: 0,
      ) as int);

  @override
  int get totalBatches => (super.noSuchMethod(
        Invocation.getter(#totalBatches),
        returnValue: 0,
      ) as int);

  @override
  String get syncETA => (super.noSuchMethod(
        Invocation.getter(#syncETA),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#syncETA),
        ),
      ) as String);

  @override
  double get batchProgress => (super.noSuchMethod(
        Invocation.getter(#batchProgress),
        returnValue: 0.0,
      ) as double);

  @override
  String get currentServerUrl => (super.noSuchMethod(
        Invocation.getter(#currentServerUrl),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#currentServerUrl),
        ),
      ) as String);

  @override
  bool get hasMoreTransactions => (super.noSuchMethod(
        Invocation.getter(#hasMoreTransactions),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoadingMore => (super.noSuchMethod(
        Invocation.getter(#isLoadingMore),
        returnValue: false,
      ) as bool);

  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);

  @override
  int get pageSize => (super.noSuchMethod(
        Invocation.getter(#pageSize),
        returnValue: 0,
      ) as int);

  @override
  bool get isWalletInitialized => (super.noSuchMethod(
        Invocation.getter(#isWalletInitialized),
        returnValue: false,
      ) as bool);

  @override
  int get totalAddresses => (super.noSuchMethod(
        Invocation.getter(#totalAddresses),
        returnValue: 0,
      ) as int);

  @override
  int get unreadMemoCount => (super.noSuchMethod(
        Invocation.getter(#unreadMemoCount),
        returnValue: 0,
      ) as int);

  @override
  bool get needsSync => (super.noSuchMethod(
        Invocation.getter(#needsSync),
        returnValue: false,
      ) as bool);

  @override
  int get unreadMessageCount => (super.noSuchMethod(
        Invocation.getter(#unreadMessageCount),
        returnValue: 0,
      ) as int);

  @override
  List<_i7.TransactionModel> get unreadMessageTransactions =>
      (super.noSuchMethod(
        Invocation.getter(#unreadMessageTransactions),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  List<_i7.TransactionModel> get allMessageTransactions => (super.noSuchMethod(
        Invocation.getter(#allMessageTransactions),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  bool get hasNewUnreadMessages => (super.noSuchMethod(
        Invocation.getter(#hasNewUnreadMessages),
        returnValue: false,
      ) as bool);

  @override
  List<_i7.TransactionModel> get recentTransactions => (super.noSuchMethod(
        Invocation.getter(#recentTransactions),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  Map<String, dynamic> get balanceSummary => (super.noSuchMethod(
        Invocation.getter(#balanceSummary),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> get transactionSummary => (super.noSuchMethod(
        Invocation.getter(#transactionSummary),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setNetworkProvider(_i10.NetworkProvider? networkProvider) =>
      super.noSuchMethod(
        Invocation.method(
          #setNetworkProvider,
          [networkProvider],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setNotificationProvider(
          _i11.NotificationProvider? notificationProvider) =>
      super.noSuchMethod(
        Invocation.method(
          #setNotificationProvider,
          [notificationProvider],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<Map<String, dynamic>> generateNewWallet() => (super.noSuchMethod(
        Invocation.method(
          #generateNewWallet,
          [],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);

  @override
  _i12.Future<void> createWallet(
    String? seedPhrase, {
    _i13.AuthProvider? authProvider,
    bool? isNewWallet = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWallet,
          [seedPhrase],
          {
            #authProvider: authProvider,
            #isNewWallet: isNewWallet,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> restoreWallet(
    String? seedPhrase, {
    int? birthdayHeight = 0,
    _i13.AuthProvider? authProvider,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreWallet,
          [seedPhrase],
          {
            #birthdayHeight: birthdayHeight,
            #authProvider: authProvider,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadCliWallet(_i13.AuthProvider? authProvider) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCliWallet,
          [authProvider],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> startBackgroundInitialization(
          _i13.AuthProvider? authProvider) =>
      (super.noSuchMethod(
        Invocation.method(
          #startBackgroundInitialization,
          [authProvider],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<bool> restoreFromStoredData(_i13.AuthProvider? authProvider) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreFromStoredData,
          [authProvider],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> refreshWallet({bool? force = false}) => (super.noSuchMethod(
        Invocation.method(
          #refreshWallet,
          [],
          {#force: force},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncWalletInBackground() => (super.noSuchMethod(
        Invocation.method(
          #syncWalletInBackground,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> startEarlyConnection() => (super.noSuchMethod(
        Invocation.method(
          #startEarlyConnection,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> checkConnectionStatus() => (super.noSuchMethod(
        Invocation.method(
          #checkConnectionStatus,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncWallet() => (super.noSuchMethod(
        Invocation.method(
          #syncWallet,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void startAutoSync() => super.noSuchMethod(
        Invocation.method(
          #startAutoSync,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAutoSync() => super.noSuchMethod(
        Invocation.method(
          #stopAutoSync,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleAutoSync(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #toggleAutoSync,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<String?> sendTransaction({
    required String? toAddress,
    required double? amount,
    String? memo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTransaction,
          [],
          {
            #toAddress: toAddress,
            #amount: amount,
            #memo: memo,
          },
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<String?> generateNewAddress([String? addressType]) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [addressType],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  String? getAddressByType(bool? isShielded) =>
      (super.noSuchMethod(Invocation.method(
        #getAddressByType,
        [isShielded],
      )) as String?);

  @override
  List<String> getAddressesOfType(bool? isShielded) => (super.noSuchMethod(
        Invocation.method(
          #getAddressesOfType,
          [isShielded],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i12.Future<void> refreshTransactions() => (super.noSuchMethod(
        Invocation.method(
          #refreshTransactions,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<String, dynamic>?> getSyncStatus() => (super.noSuchMethod(
        Invocation.method(
          #getSyncStatus,
          [],
        ),
        returnValue: _i12.Future<Map<String, dynamic>?>.value(),
      ) as _i12.Future<Map<String, dynamic>?>);

  @override
  _i12.Future<String?> encryptMessage(
    String? zAddress,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #encryptMessage,
          [
            zAddress,
            message,
          ],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<String?> decryptMessage(String? encryptedData) =>
      (super.noSuchMethod(
        Invocation.method(
          #decryptMessage,
          [encryptedData],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  void closeSendingSuccess() => super.noSuchMethod(
        Invocation.method(
          #closeSendingSuccess,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> loadTransactionsPage({
    int? page = 0,
    String? searchQuery,
    String? filterType,
    bool? resetList = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadTransactionsPage,
          [],
          {
            #page: page,
            #searchQuery: searchQuery,
            #filterType: filterType,
            #resetList: resetList,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadMoreTransactions() => (super.noSuchMethod(
        Invocation.method(
          #loadMoreTransactions,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> searchTransactions(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTransactions,
          [query],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> filterTransactions(String? type) => (super.noSuchMethod(
        Invocation.method(
          #filterTransactions,
          [type],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void clearTransactionCache() => super.noSuchMethod(
        Invocation.method(
          #clearTransactionCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<List<_i14.MessageLabel>> getMessageLabels(String? txid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageLabels,
          [txid],
        ),
        returnValue:
            _i12.Future<List<_i14.MessageLabel>>.value(<_i14.MessageLabel>[]),
      ) as _i12.Future<List<_i14.MessageLabel>>);

  @override
  _i12.Future<void> addMessageLabel(_i14.MessageLabel? label) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMessageLabel,
          [label],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> removeMessageLabel(_i14.MessageLabel? label) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageLabel,
          [label],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<String>> getAllMessageLabelNames() => (super.noSuchMethod(
        Invocation.method(
          #getAllMessageLabelNames,
          [],
        ),
        returnValue: _i12.Future<List<String>>.value(<String>[]),
      ) as _i12.Future<List<String>>);

  @override
  void clearMessageLabelsCache() => super.noSuchMethod(
        Invocation.method(
          #clearMessageLabelsCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<_i3.TransactionCategory> getTransactionCategory(String? txid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionCategory,
          [txid],
        ),
        returnValue: _i12.Future<_i3.TransactionCategory>.value(
            _FakeTransactionCategory_1(
          this,
          Invocation.method(
            #getTransactionCategory,
            [txid],
          ),
        )),
      ) as _i12.Future<_i3.TransactionCategory>);

  @override
  _i12.Future<void> setTransactionCategory(
    String? txid,
    _i3.TransactionCategory? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTransactionCategory,
          [
            txid,
            category,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<String, int>> getCategoryTypeCounts() => (super.noSuchMethod(
        Invocation.method(
          #getCategoryTypeCounts,
          [],
        ),
        returnValue: _i12.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i12.Future<Map<String, int>>);

  @override
  _i12.Future<void> autoCategorizeAllTransactions() => (super.noSuchMethod(
        Invocation.method(
          #autoCategorizeAllTransactions,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void clearTransactionCategoriesCache() => super.noSuchMethod(
        Invocation.method(
          #clearTransactionCategoriesCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> markMultipleMemosAsRead(List<String>? txids) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMultipleMemosAsRead,
          [txids],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> markMultipleMemosAsUnread(List<String>? txids) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMultipleMemosAsUnread,
          [txids],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> markAllMessagesAsRead() => (super.noSuchMethod(
        Invocation.method(
          #markAllMessagesAsRead,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> markAllMessagesAsUnread() => (super.noSuchMethod(
        Invocation.method(
          #markAllMessagesAsUnread,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i4.FinancialAnalytics> getFinancialAnalytics({
    _i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.threeMonths,
    DateTime? customStartDate,
    DateTime? customEndDate,
    bool? useCache = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFinancialAnalytics,
          [],
          {
            #period: period,
            #customStartDate: customStartDate,
            #customEndDate: customEndDate,
            #useCache: useCache,
          },
        ),
        returnValue:
            _i12.Future<_i4.FinancialAnalytics>.value(_FakeFinancialAnalytics_2(
          this,
          Invocation.method(
            #getFinancialAnalytics,
            [],
            {
              #period: period,
              #customStartDate: customStartDate,
              #customEndDate: customEndDate,
              #useCache: useCache,
            },
          ),
        )),
      ) as _i12.Future<_i4.FinancialAnalytics>);

  @override
  _i12.Future<Map<_i3.TransactionCategoryType, double>> getSpendingByCategory(
          {_i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.threeMonths}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSpendingByCategory,
          [],
          {#period: period},
        ),
        returnValue:
            _i12.Future<Map<_i3.TransactionCategoryType, double>>.value(
                <_i3.TransactionCategoryType, double>{}),
      ) as _i12.Future<Map<_i3.TransactionCategoryType, double>>);

  @override
  _i12.Future<Map<String, double>> getIncomeVsExpenses(
          {_i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.threeMonths}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIncomeVsExpenses,
          [],
          {#period: period},
        ),
        returnValue: _i12.Future<Map<String, double>>.value(<String, double>{}),
      ) as _i12.Future<Map<String, double>>);

  @override
  _i12.Future<List<_i4.AnalyticsDataPoint>> getMonthlyTrends(
          {_i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.oneYear}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyTrends,
          [],
          {#period: period},
        ),
        returnValue: _i12.Future<List<_i4.AnalyticsDataPoint>>.value(
            <_i4.AnalyticsDataPoint>[]),
      ) as _i12.Future<List<_i4.AnalyticsDataPoint>>);

  @override
  _i12.Future<List<_i4.CategoryAnalytics>> getTopSpendingCategories({
    _i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.threeMonths,
    int? limit = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopSpendingCategories,
          [],
          {
            #period: period,
            #limit: limit,
          },
        ),
        returnValue: _i12.Future<List<_i4.CategoryAnalytics>>.value(
            <_i4.CategoryAnalytics>[]),
      ) as _i12.Future<List<_i4.CategoryAnalytics>>);

  @override
  _i12.Future<List<String>> getFinancialInsights(
          {_i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.threeMonths}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFinancialInsights,
          [],
          {#period: period},
        ),
        returnValue: _i12.Future<List<String>>.value(<String>[]),
      ) as _i12.Future<List<String>>);

  @override
  _i12.Future<List<_i15.AddressLabel>> getAllAddressLabels({
    _i15.AddressLabelCategory? category,
    bool? isOwned,
    bool? activeOnly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAddressLabels,
          [],
          {
            #category: category,
            #isOwned: isOwned,
            #activeOnly: activeOnly,
          },
        ),
        returnValue:
            _i12.Future<List<_i15.AddressLabel>>.value(<_i15.AddressLabel>[]),
      ) as _i12.Future<List<_i15.AddressLabel>>);

  @override
  _i12.Future<List<_i15.AddressLabel>> getAddressLabels(String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressLabels,
          [address],
        ),
        returnValue:
            _i12.Future<List<_i15.AddressLabel>>.value(<_i15.AddressLabel>[]),
      ) as _i12.Future<List<_i15.AddressLabel>>);

  @override
  _i12.Future<void> addAddressLabel(_i15.AddressLabel? label) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddressLabel,
          [label],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateAddressLabel(_i15.AddressLabel? label) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddressLabel,
          [label],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteAddressLabel(_i15.AddressLabel? label) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAddressLabel,
          [label],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<_i15.AddressLabelCategory, List<_i15.AddressLabel>>>
      getAddressLabelsByCategory({
    bool? isOwned,
    bool? activeOnly = true,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAddressLabelsByCategory,
              [],
              {
                #isOwned: isOwned,
                #activeOnly: activeOnly,
              },
            ),
            returnValue: _i12.Future<
                    Map<_i15.AddressLabelCategory,
                        List<_i15.AddressLabel>>>.value(
                <_i15.AddressLabelCategory, List<_i15.AddressLabel>>{}),
          ) as _i12
              .Future<Map<_i15.AddressLabelCategory, List<_i15.AddressLabel>>>);

  @override
  _i12.Future<Map<String, int>> getAddressLabelStats() => (super.noSuchMethod(
        Invocation.method(
          #getAddressLabelStats,
          [],
        ),
        returnValue: _i12.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i12.Future<Map<String, int>>);

  @override
  _i12.Future<bool> hasAddressLabels(String? address) => (super.noSuchMethod(
        Invocation.method(
          #hasAddressLabels,
          [address],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<_i15.AddressLabel?> getPrimaryAddressLabel(String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrimaryAddressLabel,
          [address],
        ),
        returnValue: _i12.Future<_i15.AddressLabel?>.value(),
      ) as _i12.Future<_i15.AddressLabel?>);

  @override
  void clearAddressLabelsCache() => super.noSuchMethod(
        Invocation.method(
          #clearAddressLabelsCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<List<Map<String, dynamic>>> getFrequentExternalAddresses({
    int? minTransactions = 3,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFrequentExternalAddresses,
          [],
          {
            #minTransactions: minTransactions,
            #limit: limit,
          },
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);

  @override
  _i12.Future<Map<String, _i15.AddressLabelType>>
      suggestLabelsForExternalAddresses(
              List<Map<String, dynamic>>? externalAddresses) =>
          (super.noSuchMethod(
            Invocation.method(
              #suggestLabelsForExternalAddresses,
              [externalAddresses],
            ),
            returnValue: _i12.Future<Map<String, _i15.AddressLabelType>>.value(
                <String, _i15.AddressLabelType>{}),
          ) as _i12.Future<Map<String, _i15.AddressLabelType>>);

  @override
  _i12.Future<List<Map<String, dynamic>>> getUnlabeledExternalAddresses() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnlabeledExternalAddresses,
          [],
        ),
        returnValue: _i12.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i12.Future<List<Map<String, dynamic>>>);

  @override
  _i12.Future<List<_i15.AddressLabel>> autoSuggestExternalAddressLabels() =>
      (super.noSuchMethod(
        Invocation.method(
          #autoSuggestExternalAddressLabels,
          [],
        ),
        returnValue:
            _i12.Future<List<_i15.AddressLabel>>.value(<_i15.AddressLabel>[]),
      ) as _i12.Future<List<_i15.AddressLabel>>);

  @override
  _i12.Future<Map<String, dynamic>> getExternalAddressPatterns(
          String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExternalAddressPatterns,
          [address],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);

  @override
  _i12.Future<void> refreshTransactionsFromDatabase() => (super.noSuchMethod(
        Invocation.method(
          #refreshTransactionsFromDatabase,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> syncTransactionsToDatabase() => (super.noSuchMethod(
        Invocation.method(
          #syncTransactionsToDatabase,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<String, int>> getTransactionStats() => (super.noSuchMethod(
        Invocation.method(
          #getTransactionStats,
          [],
        ),
        returnValue: _i12.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i12.Future<Map<String, int>>);

  @override
  _i12.Future<void> markMemoAsRead(String? txid) => (super.noSuchMethod(
        Invocation.method(
          #markMemoAsRead,
          [txid],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> markMemoAsUnread(String? txid) => (super.noSuchMethod(
        Invocation.method(
          #markMemoAsUnread,
          [txid],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateUnreadMemoCount() => (super.noSuchMethod(
        Invocation.method(
          #updateUnreadMemoCount,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  List<_i7.TransactionModel> getUnreadMemoTransactions() => (super.noSuchMethod(
        Invocation.method(
          #getUnreadMemoTransactions,
          [],
        ),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  void setNotificationContext(_i16.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #setNotificationContext,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearWallet() => super.noSuchMethod(
        Invocation.method(
          #clearWallet,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.TransactionModel> getTransactionsByType(String? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionsByType,
          [type],
        ),
        returnValue: <_i7.TransactionModel>[],
      ) as List<_i7.TransactionModel>);

  @override
  bool isMyAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #isMyAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<String?> getSeedPhrase() => (super.noSuchMethod(
        Invocation.method(
          #getSeedPhrase,
          [],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<void> ensurePreferencesInitialized() => (super.noSuchMethod(
        Invocation.method(
          #ensurePreferencesInitialized,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> resetNotificationTracking() => (super.noSuchMethod(
        Invocation.method(
          #resetNotificationTracking,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> resetAllMemoReadStatuses() => (super.noSuchMethod(
        Invocation.method(
          #resetAllMemoReadStatuses,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  bool getMemoReadStatus(String? txid) => (super.noSuchMethod(
        Invocation.method(
          #getMemoReadStatus,
          [txid],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool getTransactionMemoReadStatus(
    String? txid,
    bool? defaultValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionMemoReadStatus,
          [
            txid,
            defaultValue,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  void clearAnalyticsCache() => super.noSuchMethod(
        Invocation.method(
          #clearAnalyticsCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getAnalyticsCacheStats() => (super.noSuchMethod(
        Invocation.method(
          #getAnalyticsCacheStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  List<Map<String, dynamic>> getRecentNotificationAttempts({int? limit = 20}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentNotificationAttempts,
          [],
          {#limit: limit},
        ),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CurrencyProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyProvider extends _i1.Mock implements _i18.CurrencyProvider {
  MockCurrencyProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Currency get selectedCurrency => (super.noSuchMethod(
        Invocation.getter(#selectedCurrency),
        returnValue: _FakeCurrency_3(
          this,
          Invocation.getter(#selectedCurrency),
        ),
      ) as _i5.Currency);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> setSelectedCurrency(_i5.Currency? currency) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSelectedCurrency,
          [currency],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> fetchPrices({bool? forceRefresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPrices,
          [],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  String formatFiatAmount(double? btczAmount) => (super.noSuchMethod(
        Invocation.method(
          #formatFiatAmount,
          [btczAmount],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #formatFiatAmount,
            [btczAmount],
          ),
        ),
      ) as String);

  @override
  double? convertBtczToFiat(double? btczAmount) =>
      (super.noSuchMethod(Invocation.method(
        #convertBtczToFiat,
        [btczAmount],
      )) as double?);

  @override
  double? convertFiatToBtcz(double? fiatAmount) =>
      (super.noSuchMethod(Invocation.method(
        #convertFiatToBtcz,
        [fiatAmount],
      )) as double?);

  @override
  String formatWithSymbol(double? amount) => (super.noSuchMethod(
        Invocation.method(
          #formatWithSymbol,
          [amount],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #formatWithSymbol,
            [amount],
          ),
        ),
      ) as String);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
