syntax = "proto3";

package cash.z.wallet.sdk.rpc;

// CompactBlock represents a minimal block with only the data needed for light wallet sync
message CompactBlock {
  uint32 proto_version = 1;  // Version of this protocol buffer schema
  uint64 height = 2;         // Block height
  bytes hash = 3;            // Block hash
  bytes prev_hash = 4;       // Previous block hash
  uint32 time = 5;           // Block timestamp
  bytes header = 6;          // Block header bytes
  repeated CompactTx vtx = 7; // Transactions affecting watched addresses
}

// CompactTx represents a transaction with only the data needed for light wallet sync
message CompactTx {
  uint64 index = 1;          // Position of transaction within the block
  bytes hash = 2;            // Transaction hash
  uint64 fee = 3;            // Transaction fee in zatoshis
  repeated CompactSaplingSpend spends = 4;    // Sapling spends
  repeated CompactSaplingOutput outputs = 5;   // Sapling outputs
  repeated CompactOrchardAction actions = 6;   // Orchard actions (for future compatibility)
}

// CompactSaplingSpend represents a Sapling spend
message CompactSaplingSpend {
  bytes nf = 1; // Nullifier
}

// CompactSaplingOutput represents a Sapling output
message CompactSaplingOutput {
  bytes cmu = 1;     // Note commitment u-coordinate
  bytes epk = 2;     // Ephemeral public key
  bytes ciphertext = 3; // First 52 bytes of encrypted note plaintext
}

// CompactOrchardAction represents an Orchard action (future compatibility)
message CompactOrchardAction {
  bytes nullifier = 1;
  bytes cmx = 2;
  bytes ephemeral_key = 3;
  bytes ciphertext = 4;
}

// ChainMetadata represents information about the blockchain
message ChainMetadata {
  uint32 sapling_commitment_tree_size = 1;
  uint32 orchard_commitment_tree_size = 2;
}